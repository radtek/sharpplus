#ifndef INC_SqliteParserTokenTypes_hpp_
#define INC_SqliteParserTokenTypes_hpp_

/* $ANTLR 2.7.5 (20050201): "sqlite_ansi.g" -> "SqliteParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API SqliteParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		SQL2RW_abort = 30,
		SQL2RW_add = 31,
		SQL2RW_after = 32,
		SQL2RW_all = 33,
		SQL2RW_alter = 34,
		SQL2RW_analyze = 35,
		SQL2RW_and = 36,
		SQL2RW_as = 37,
		SQL2RW_asc = 38,
		SQL2RW_attach = 39,
		SQL2RW_autoincrement = 40,
		SQL2RW_before = 50,
		SQL2RW_begin = 51,
		SQL2RW_between = 52,
		SQL2RW_by = 53,
		SQL2RW_cascade = 60,
		SQL2RW_case = 61,
		SQL2RW_cast = 62,
		SQL2RW_check = 63,
		SQL2RW_collate = 64,
		SQL2RW_column = 65,
		SQL2RW_commit = 66,
		SQL2RW_conflict = 67,
		SQL2RW_constriant = 68,
		SQL2RW_create = 69,
		SQL2RW_cross = 70,
		SQL2RW_currentdate = 71,
		SQL2RW_currenttime = 72,
		SQL2RW_currenttimestamp = 73,
		SQL2RW_database = 80,
		SQL2RW_default = 81,
		SQL2RW_deferred = 82,
		SQL2RW_deferrable = 83,
		SQL2RW_delete = 84,
		SQL2RW_desc = 85,
		SQL2RW_detach = 86,
		SQL2RW_distinct = 87,
		SQL2RW_drop = 88,
		SQL2RW_end = 90,
		SQL2RW_each = 91,
		SQL2RW_else = 92,
		SQL2RW_escape = 93,
		SQL2RW_except = 94,
		SQL2RW_exclusive = 95,
		SQL2RW_exists = 96,
		SQL2RW_explain = 97,
		SQL2RW_fail = 100,
		SQL2RW_for = 101,
		SQL2RW_foreign = 102,
		SQL2RW_from = 103,
		SQL2RW_full = 104,
		SQL2RW_glob = 105,
		SQL2RW_group = 106,
		SQL2RW_having = 110,
		SQL2RW_if = 120,
		SQL2RW_ignore = 121,
		SQL2RW_immediate = 122,
		SQL2RW_in = 123,
		SQL2RW_index = 124,
		SQL2RW_initially = 125,
		SQL2RW_inner = 126,
		SQL2RW_insert = 127,
		SQL2RW_instead = 128,
		SQL2RW_intersect = 129,
		SQL2RW_into = 130,
		SQL2RW_is = 131,
		SQL2RW_isnull = 132,
		SQL2RW_join = 140,
		SQL2RW_key = 150,
		SQL2RW_left = 151,
		SQL2RW_like = 152,
		SQL2RW_limit = 153,
		SQL2RW_match = 160,
		SQL2RW_natural = 170,
		SQL2RW_not = 171,
		SQL2RW_notnull = 172,
		SQL2RW_null = 173,
		SQL2RW_of = 180,
		SQL2RW_offset = 181,
		SQL2RW_on = 182,
		SQL2RW_or = 183,
		SQL2RW_order = 184,
		SQL2RW_outer = 185,
		SQL2RW_plan = 190,
		SQL2RW_pragma = 191,
		SQL2RW_primary = 192,
		SQL2RW_query = 200,
		SQL2RW_raise = 210,
		SQL2RW_references = 211,
		SQL2RW_regexp = 212,
		SQL2RW_reindex = 213,
		SQL2RW_rename = 214,
		SQL2RW_replace = 215,
		SQL2RW_restrict = 216,
		SQL2RW_right = 217,
		SQL2RW_rollback = 218,
		SQL2RW_row = 219,
		SQL2RW_select = 220,
		SQL2RW_set = 221,
		SQL2RW_statement = 222,
		SQL2RW_table = 230,
		SQL2RW_temp = 231,
		SQL2RW_temporary = 232,
		SQL2RW_then = 233,
		SQL2RW_to = 234,
		SQL2RW_transaction = 235,
		SQL2RW_trigger = 236,
		SQL2RW_union = 240,
		SQL2RW_unique = 241,
		SQL2RW_update = 242,
		SQL2RW_using = 243,
		SQL2RW_vacuum = 250,
		SQL2RW_values = 251,
		SQL2RW_view = 252,
		SQL2RW_virtual = 253,
		SQL2RW_when = 260,
		SQL2RW_where = 261,
		COMMENT = 262,
		NOT_EQ = 263,
		INTEGER = 264,
		FLOAT = 265,
		DOT = 266,
		VARIABLE = 267,
		ID = 268,
		STRING = 269,
		SPACE = 270,
		NEW_LINE = 271,
		SL_COMMENT = 272,
		MINUS = 273,
		LP = 274,
		RP = 275,
		SEMI = 276,
		PLUS = 277,
		STAR = 278,
		ML_COMMENT = 279,
		SLASH = 280,
		REM = 281,
		EQ = 282,
		LE = 283,
		NE = 284,
		LSHIFT = 285,
		LESS_THAN = 286,
		GE = 287,
		RSHIFT = 288,
		GT = 289,
		NE_LEGAL = 290,
		BITOR = 291,
		CONCAT = 292,
		COMMA = 293,
		BITAND = 294,
		BITNOT = 295,
		STRING_LITERAL1 = 296,
		STRING_LITERAL2 = 297,
		STRING_LITERAL3 = 298,
		NUMBERIC = 299,
		ID_1 = 300,
		VARIABLE_1 = 301,
		VARIABLE_2 = 302,
		BLOB = 303,
		ID_2 = 304,
		SIMPLE_LETTER = 305,
		ANY = 306,
		VACUUM_DEF = 307,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_SqliteParserTokenTypes_hpp_*/
